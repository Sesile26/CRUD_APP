{"version":3,"sources":["components/Modal/ModalWindow.tsx","components/Filter/Filter.tsx","api/api.ts","components/DataTable/DataTable.tsx","App.tsx","index.tsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","ModalWindow","open","handleClose","modalData","Modal","onClose","aria-labelledby","aria-describedby","Box","sx","Typography","id","variant","component","title","mt","src","url","alt","Filter","filter","handleFilterChange","FilterValues","Array","keys","minWidth","FormControl","fullWidth","InputLabel","Select","labelId","value","label","onChange","map","v","MenuItem","API_URL","getData","a","fetch","response","json","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","flexShrink","ml","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","DataTable","useState","data","setData","tableData","setTableData","React","setFilter","filteredData","row","newMainDate","item","Number","newData","albumId","getAll","dataFromApi","useEffect","setModalData","setOpen","rows","thumbnailUrl","setPage","setRowsPerPage","emptyRows","length","target","selectValue","TableContainer","Paper","Table","TableBody","slice","TableRow","TableCell","align","type","handleOpen","scope","Button","color","handleDelate","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+eAKMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GA6BUC,EApBsB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UACzD,OACE,cAACC,EAAA,EAAD,CACEH,KAAMA,EACNI,QAASH,EACTI,kBAAgB,oBAChBC,mBAAiB,0BAJnB,SAME,eAACC,EAAA,EAAD,CAAKC,GAAInB,EAAT,UACE,cAACoB,EAAA,EAAD,CAAYC,GAAG,oBAAoBC,QAAQ,KAAKC,UAAU,KAA1D,SACE,mCAAIV,QAAJ,IAAIA,OAAJ,EAAIA,EAAWW,UAEjB,cAACJ,EAAA,EAAD,CAAYC,GAAG,0BAA0BF,GAAI,CAAEM,GAAI,GAAnD,SACE,qBAAKC,IAAG,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAWc,IAAKC,IAAI,a,oCCAzBC,EAvBiB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,mBACnCC,EAAY,YAAOC,MAAM,KAAKC,QAEpC,OACE,cAAChB,EAAA,EAAD,CAAKC,GAAI,CAAEgB,SAAU,KAArB,SACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,EAAA,EAAD,CAAYjB,GAAG,2BAAf,qBACA,cAACkB,EAAA,EAAD,CACEC,QAAQ,2BACRnB,GAAG,qBACHoB,MAAOX,EACPY,MAAM,UACNC,SAAUZ,EALZ,SAOGC,EAAaY,KAAI,SAAAC,GAAC,OACjB,cAACC,EAAA,EAAD,CAAkBL,MAAOI,EAAzB,SAA6BA,GAAdA,cC5BrBE,EAAU,6CAET,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,yBAGEA,EAASC,QAHX,4C,sBC+BP,SAASC,EAAuBC,GAC9B,IAAMC,EAAQC,cAEZC,EAIEH,EAJFG,MACAC,EAGEJ,EAHFI,KACAC,EAEEL,EAFFK,YACAC,EACEN,EADFM,aAqBF,OACE,eAAC1C,EAAA,EAAD,CAAKC,GAAI,CAAE0C,WAAY,EAAGC,GAAI,KAA9B,UACE,cAACC,EAAA,EAAD,CACEC,QArB6B,SACjCC,GAEAL,EAAaK,EAAO,IAmBhBC,SAAmB,IAATR,EACVS,aAAW,aAHb,SAKuB,QAApBZ,EAAMa,UAAsB,cAAC,IAAD,IAAmB,cAAC,IAAD,MAElD,cAACL,EAAA,EAAD,CACEC,QAtBwB,SAACC,GAC7BL,EAAaK,EAAOP,EAAO,IAsBvBQ,SAAmB,IAATR,EACVS,aAAW,gBAHb,SAKuB,QAApBZ,EAAMa,UAAsB,cAAC,IAAD,IAAyB,cAAC,IAAD,MAExD,cAACL,EAAA,EAAD,CACEC,QAzBwB,SAACC,GAC7BL,EAAaK,EAAOP,EAAO,IAyBvBQ,SAAUR,GAAQW,KAAKC,KAAKb,EAAQE,GAAe,EACnDQ,aAAW,YAHb,SAKuB,QAApBZ,EAAMa,UAAsB,cAAC,IAAD,IAAwB,cAAC,IAAD,MAEvD,cAACL,EAAA,EAAD,CACEC,QA5B4B,SAACC,GACjCL,EAAaK,EAAOI,KAAKE,IAAI,EAAGF,KAAKC,KAAKb,EAAQE,GAAe,KA4B7DO,SAAUR,GAAQW,KAAKC,KAAKb,EAAQE,GAAe,EACnDQ,aAAW,YAHb,SAKuB,QAApBZ,EAAMa,UAAsB,cAAC,IAAD,IAAoB,cAAC,IAAD,SAgBlD,IAAMI,EAAsB,WACjC,MAAwBC,mBAAsB,IAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAsB,IAAxD,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BC,IAAML,SAAS,KAA3C,mBAAO3C,EAAP,KAAeiD,EAAf,KAEMC,EAAe,SAACC,EAAkBxC,GACtC,GAAY,OAARwC,EAAc,CAChB,IAAMC,EAAc,YAAIR,GAAM5C,QAAO,SAAAqD,GAAI,OAAIA,EAAK9D,KAAO4D,EAAI5D,MAI7D,GAFAsD,EAAQO,GAEJE,OAAO3C,GAAQ,CACjB,IAAM4C,EAAU,YAAIH,GAAapD,QAAO,SAAAqD,GAAI,OAAIA,EAAKG,UAAYF,OAAOtD,MAExE+C,EAAaQ,GAGf,IAAKD,OAAO3C,GAAQ,CAClB,IAAM4C,EAAO,YAAOH,GAEpBL,EAAaQ,IAIjB,GAAY,OAARJ,EAAc,CAChB,GAAIxC,EAAO,CACT,IAAM4C,EAAU,YAAIX,GAAM5C,QAAO,SAAAqD,GAAI,OAAIA,EAAKG,UAAYF,OAAO3C,MAEjEoC,EAAaQ,GAGf,IAAK5C,EAAO,CACV,IAAM4C,EAAO,YAAOX,GAEpBG,EAAaQ,MAabE,EAAM,uCAAG,4BAAAtC,EAAA,sEACaD,IADb,OACPwC,EADO,OAGbb,EAAQa,GACRX,EAAaW,GAJA,2CAAH,qDAWZC,qBAAU,WACRF,MACC,IAEH,MAAkCT,IAAML,SAAsB,MAA9D,mBAAO5D,EAAP,KAAkB6E,EAAlB,KACA,EAAwBZ,IAAML,UAAS,GAAvC,mBAAO9D,EAAP,KAAagF,EAAb,KAQMC,EAAOhB,EAAUhC,KAAI,SAACC,GAAD,OAjFTgD,EAkFhBhD,EAAEgD,aAlFoCrE,EAmFtCqB,EAAErB,MAnFmDH,EAoFrDwB,EAAExB,GApF+DiE,EAqFjEzC,EAAEyC,QArFgF3D,EAsFlFkB,EAAElB,IArFG,CACLkE,eACArE,QACAH,KACAiE,UACA3D,OANJ,IAAoBkE,EAAsBrE,EAAeH,EAAYiE,EAAiB3D,KAyFpF,EAAwBmD,IAAML,SAAS,GAAvC,mBAAOf,EAAP,KAAaoC,EAAb,KACA,EAAsChB,IAAML,SAAS,GAArD,mBAAOd,EAAP,KAAoBoC,EAApB,KAGMC,EAAYtC,EAAO,EAAIW,KAAKE,IAAI,GAAI,EAAIb,GAAQC,EAAciC,EAAKK,QAAU,EAgBnF,OACE,qCACE,cAAC,EAAD,CAAQnE,OAAQA,EAAQiD,UAAWA,EAAWhD,mBA9DvB,SAACkC,GAC1Bc,EAAUd,EAAMiC,OAAOzD,OAEvB,IAAM0D,EAAclC,EAAMiC,OAAOzD,MAEjCuC,EAAa,KAAMmB,MA0DjB,cAACC,EAAA,EAAD,CAAgB7E,UAAW8E,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOnF,GAAI,CAAEgB,SAAU,KAAOgC,aAAW,0BAAzC,UACE,eAACoC,EAAA,EAAD,YACI5C,EAAc,EACZiC,EAAKY,MAAM9C,EAAOC,EAAaD,EAAOC,EAAcA,GACpDiC,GACFhD,KAAI,SAACqC,GAAD,OACJ,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW1G,MAAO,CAAEK,MAAO,KAAOsG,MAAM,QAAxC,SACE,wBAAQC,KAAK,SAAS5C,QAAS,kBA/C5B,SAACiB,GAClBS,EAAaT,GACbU,GAAQ,GA6C2CkB,CAAW5B,IAAhD,SACE,qBAAKvD,IAAKuD,EAAIY,aAAcjE,IAAI,SAGpC,cAAC8E,EAAA,EAAD,CAAWnF,UAAU,KAAKuF,MAAM,MAAhC,SACG7B,EAAIzD,QAEP,cAACkF,EAAA,EAAD,CAAW1G,MAAO,CAAEK,MAAO,KAAOsG,MAAM,QAAxC,SACG1B,EAAI5D,KAEP,cAACqF,EAAA,EAAD,CAAW1G,MAAO,CAAEK,MAAO,KAAOsG,MAAM,QAAxC,SACG1B,EAAIK,UAEP,cAACoB,EAAA,EAAD,CAAW1G,MAAO,CAAEK,MAAO,KAAOsG,MAAM,QAAxC,SACE,cAACI,EAAA,EAAD,CAAQzF,QAAQ,YAAY0F,MAAM,QAAQhD,QAAS,kBAvE9C,SAACiB,GACpBD,EAAaC,EAAKnD,GAsEqDmF,CAAahC,IAAtE,wBAhBWA,EAAI5D,OAsBpB2E,EAAY,GACX,cAACS,EAAA,EAAD,CAAUzG,MAAO,CAAEkH,OAAQ,GAAKlB,GAAhC,SACE,cAACU,EAAA,EAAD,CAAWS,QAAS,SAI1B,cAACC,EAAA,EAAD,UACE,cAACX,EAAA,EAAD,UACE,cAACY,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAE5E,MAAO,MAAOD,OAAQ,IACxD0E,QAAS,EACT1D,MAAOmC,EAAKK,OACZtC,YAAaA,EACbD,KAAMA,EACN6D,YAAa,CACXC,WAAY,CACV,aAAc,iBAEhBC,QAAQ,GAEV7D,aAlEW,SACvBK,EACAyD,GAEA5B,EAAQ4B,IA+DIC,oBA5DkB,SAC9B1D,GAEA8B,EAAe6B,SAAS3D,EAAMiC,OAAOzD,MAAO,KAC5CqD,EAAQ,IAyDI+B,iBAAkBxE,aAM5B,cAAC,EAAD,CAAa1C,KAAMA,EAAMC,YA1FT,kBAAM+E,GAAQ,IA0FqB9E,UAAWA,QCnQvDiH,EAAgB,WAC3B,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1562d2fa.chunk.js","sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\ntype Props = {\n  open: boolean,\n  handleClose: () => void,\n  modalData: Data | null,\n};\n\nconst ModalWindow: React.FC<Props> = ({ open, handleClose, modalData }) => {\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n          <p>{modalData?.title}</p>\n        </Typography>\n        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n          <img src={modalData?.url} alt=\"\" />\n        </Typography>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default ModalWindow;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\ntype Props = {\n  filter: string,\n  setFilter: (id: string) => void,\n  handleFilterChange: (event: SelectChangeEvent) => void,\n};\n\nconst Filter: React.FC<Props> = ({ filter, handleFilterChange }) => {\n  const FilterValues = [...Array(101).keys()];\n\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">AlbumId</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={filter}\n          label=\"AlbumId\"\n          onChange={handleFilterChange}\n        >\n          {FilterValues.map(v => (\n            <MenuItem key={v} value={v}>{v}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default Filter;\n","const API_URL = 'http://jsonplaceholder.typicode.com/photos';\r\n\r\nexport async function getData() {\r\n  const response = await fetch(API_URL);\r\n\r\n  return response.json();\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\n\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport Button from '@mui/material/Button';\nimport ModalWindow from '../Modal/ModalWindow';\nimport Filter from '../Filter/Filter';\nimport { getData } from '../../api/api';\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    newPage: number,\n  ) => void;\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange,\n  } = props;\n\n  const handleFirstPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </Box>\n  );\n}\n\nfunction createData(thumbnailUrl: string, title: string, id: number, albumId: number, url: string) {\n  return {\n    thumbnailUrl,\n    title,\n    id,\n    albumId,\n    url,\n  };\n}\n\nexport const DataTable: React.FC = () => {\n  const [data, setData] = useState<Data[] | []>([]);\n  const [tableData, setTableData] = useState<Data[] | []>([]);\n  const [filter, setFilter] = React.useState('0');\n\n  const filteredData = (row: Data | null, value: string | null) => {\n    if (row !== null) {\n      const newMainDate = [...data].filter(item => item.id !== row.id);\n\n      setData(newMainDate);\n\n      if (Number(value)) {\n        const newData = [...newMainDate].filter(item => item.albumId === Number(filter));\n\n        setTableData(newData);\n      }\n\n      if (!Number(value)) {\n        const newData = [...newMainDate];\n\n        setTableData(newData);\n      }\n    }\n\n    if (row === null) {\n      if (value) {\n        const newData = [...data].filter(item => item.albumId === Number(value));\n\n        setTableData(newData);\n      }\n\n      if (!value) {\n        const newData = [...data];\n\n        setTableData(newData);\n      }\n    }\n  };\n\n  const handleFilterChange = (event: SelectChangeEvent) => {\n    setFilter(event.target.value);\n\n    const selectValue = event.target.value;\n\n    filteredData(null, selectValue);\n  };\n\n  const getAll = async () => {\n    const dataFromApi = await getData();\n\n    setData(dataFromApi);\n    setTableData(dataFromApi);\n  };\n\n  const handleDelate = (row: Data) => {\n    filteredData(row, filter);\n  };\n\n  useEffect(() => {\n    getAll();\n  }, []);\n\n  const [modalData, setModalData] = React.useState<Data | null>(null);\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = (row: Data) => {\n    setModalData(row);\n    setOpen(true);\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const rows = tableData.map((v: Data) => createData(\n    v.thumbnailUrl,\n    v.title,\n    v.id,\n    v.albumId,\n    v.url,\n  ));\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number,\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Filter filter={filter} setFilter={setFilter} handleFilterChange={handleFilterChange} />\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell style={{ width: 160 }} align=\"right\">\n                  <button type=\"button\" onClick={() => handleOpen(row)}>\n                    <img src={row.thumbnailUrl} alt=\"\" />\n                  </button>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.title}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"right\">\n                  {row.id}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"right\">\n                  {row.albumId}\n                </TableCell>\n                <TableCell style={{ width: 160 }} align=\"right\">\n                  <Button variant=\"contained\" color=\"error\" onClick={() => handleDelate(row)}>\n                    Delate\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: {\n                    'aria-label': 'rows per page',\n                  },\n                  native: true,\n                }}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n      <ModalWindow open={open} handleClose={handleClose} modalData={modalData} />\n    </>\n  );\n};\n\nexport default DataTable;\n","import React from 'react';\nimport './App.scss';\nimport { DataTable } from './components/DataTable/DataTable';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <DataTable />\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}